version: "3.11"

networks:
  research-gpt:

volumes:
  redis:

services:
  # Redis cache service
  cache:
    image: redis/redis-stack-server:latest
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis:/data
    environment:
      REDIS_ARGS: "--requirepass ${REDIS_PASSWORD} --maxmemory 1024mb --maxmemory-policy allkeys-lru --appendonly yes"
    networks:
      - research-gpt

  # API service for the GPT research
  api:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    command: gunicorn main:app --workers 1 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000
    expose:
      - 8000
    environment:
      - PORT=8000
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - 8000:8000
    depends_on:
      - cache
    networks:
      - research-gpt

  # Nginx service
  web:
    restart: always
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    depends_on:
      - api
    networks:
      - research-gpt
    volumes:
      - ./certbot/conf:/etc/letsencrypt # Volume for Certbot configuration
      - ./certbot/www:/var/www/certbot # Volume for Certbot webroot
      - ./nginx:/etc/nginx/conf.d # Nginx config
    environment:
      - CERTBOT_EMAIL=${CERTBOT_EMAIL} # Replace with your email address
      - CERTBOT_DOMAIN=${CERTBOT_DOMAIN} # Replace with your domain
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"''' # reloads the newly obtained certificates every 6 hours

  # Use the Certbot container to obtain and renew SSL certificates
  certbot:
    image: certbot/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${CERTBOT_EMAIL} --agree-tos --no-eff-email --force-renewal --rsa-key-size 4096 --domain ${CERTBOT_DOMAIN} # Replace with your domain
    volumes:
      - ./certbot/conf:/etc/letsencrypt # Mount the Certbot configuration volume
      - ./certbot/www:/var/www/certbot # Mount the Certbot webroot volume
    depends_on:
      - web
    networks:
      - research-gpt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'" # This will check if your certificate is up for renewal every 12 hours as recommended by Letâ€™s Encrypt.
